#!/bin/bash

user='stream'
passwd='luso'
database="$HOME/shares"
server_ip='192.168.1.100'
CREDENTIALS="$HOME/.access"

usage() {
	printf "
===============================================
          __  ____                 
         /  |/  (_)___  __  ___  __
        / /|_/ / / __ \/ / / / |/_/
       / /  / / / / / / /_/ />  <  
      /_/  /_/_/_/ /_/\__,_/_/|_|  
                                   

              SCRIPT USAGE
 
===============================================
This is how you can use this script to mount shares.

Flags:
  -u: user
  -p: password
  -s: server ip
  -d: directory where you want to mount it

Example:
  sh mount-shares -u minux -p minuxdev -d ~/my/shares -s 192.168.1.100

  "
	exit

}

while getopts "u:p:s:d" options; do
	case $options in
	u)
		user=$OPTARG
		;;
	p)
		passwd=$OPTARG
		;;
	s)
		server_ip=$OPTARG
		;;
	d)
		database=$OPTARG
		;;
	*)
		usage
		;;
	esac
	[ -f $CREDENTIALS ] && rm $CREDENTIALS
done

ping -c1 -W1 -q "$server_ip"

if [ "$?" = 0 ]; then

	[ ! -f $CREDENTIALS ] && echo -e "username=$user\npassword=$passwd\ndomain=DATACENTER" >$CREDENTIALS &&
		chmod 0600 $CREDENTIALS

	# UMOUNT ALL CIFS DRIVERS
	sudo umount -f "//$server_ip/d_rec" "$database/d_rec" 2 &>/dev/null
	sudo umount -f "//$server_ip/stream" "$database/stream" 2 &>/dev/null
	sudo umount -f "//$server_ip/private" "$database/private" 2 &>/dev/null

	# MOUNT ALL CIFS DRIVERS
	mkdir -p "$database"/{d_rec,stream,private}

	sudo mount -t cifs -o credentials="$CREDENTIALS,uid=$(id -u),gid=$(id -g),noserverino,forceuid,forcegid" "//$server_ip/private" "$HOME/shares/private"
	sudo mount -t cifs -o credentials="$CREDENTIALS,uid=$(id -u),gid=$(id -g),noserverino,forceuid,forcegid" "//$server_ip/d_rec" "$HOME/shares/d_rec"
	sudo mount -t cifs -o credentials="$CREDENTIALS,uid=$(id -u),gid=$(id -g),noserverino,forceuid,forcegid" "//$server_ip/stream" "$HOME/shares/stream"
else
	exit
fi
